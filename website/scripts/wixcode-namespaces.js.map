{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c4304f0a0b0ce198e24b","webpack:///external \"wix\"","webpack:///./src/namespaces/Users/consts.js","webpack:///external \"_\"","webpack:///./src/namespaces/Users/users.js","webpack:///./src/namespaces/Foo/index.js","webpack:///./src/namespaces/Users/index.js","webpack:///./src/namespaces/Users/user.js","webpack:///./src/namespaces/index.js"],"names":["UserErrors","CLOSE_DIALOG","NO_LOGGED_IN","AWAITING_APPROVAL","UserRoles","VISITOR","MEMBER","ADMIN","LoginStatus","APPLICANT","ACTIVE","extendCompSchema","platformUtils","postMessage","validation","mode","schemaType","enum","validations","type","lang","maxLength","minLength","length","onLogin","language","Users","appDefId","options","Promise","resolve","reject","requestParams","callOnCancel","get","validate","sendMessage","Intent","WIX_CODE_SITE_API","MessageTypes","SM_REQUEST_LOGIN","data","error","wasCancelled","isObject","status","uid","id","permissions","owner","SM_LOGOUT","isUndefined","SM_FORGOT_PASSWORD","callback","RGI","getRGI","addOnUserLoginCallback","currentUser","console","log","siteMemberData","getSiteMemberData","module","register","User","memberData","loggedIn","role","getSessionInfo","instance","instanceId","getEmail","bind","SM_CURRENT_USER_EMAIL","email","Foo"],"mappings":"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","file":"wixcode-namespaces.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"wix\"), require(\"_\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"wix\", \"_\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wixcode-namespaces\"] = factory(require(\"wix\"), require(\"_\"));\n\telse\n\t\troot[\"wixcode-namespaces\"] = factory(root[\"wix\"], root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4304f0a0b0ce198e24b","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"wix\"\n// module id = 0\n// module chunks = 0 1 2","const UserErrors = {\n  CLOSE_DIALOG: 'The user closed the login dialog',\n  NO_LOGGED_IN: 'No user is currently logged in',\n  AWAITING_APPROVAL: 'Member login request has been sent and is awaiting approval'\n};\n\nconst UserRoles = {\n  VISITOR: 'Visitor',\n  MEMBER: 'Member',\n  ADMIN: 'Admin'\n};\n\nconst LoginStatus = {\n  APPLICANT: 'APPLICANT',\n  ACTIVE: 'ACTIVE'\n};\n\nexport {\n  UserErrors,\n  LoginStatus,\n  UserRoles\n};\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/Users/consts.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 2\n// module chunks = 0 1","import { LoginStatus, UserErrors } from './consts';\nimport User from './user';\nimport _ from 'lodash';\nimport { core } from 'wixcode-sdk';\n\nconst { extendCompSchema, platformUtils, postMessage, validation } = {...core};\n\n/**\n * @namespace wix-users\n * @summary The wix-users module contains functionality for working with your\n *  site's users.\n * @description\n *  There are three types of users:\n *\n *  + Visitor - A user who is not logged into your site.\n *  + Member - A user who is logged into your site.\n *  + Admin - The owner of the site.\n *\n *\n *  To use the Users API, import `wixUsers` from the `wix-users` module:\n *\n *    ``` javascript\n *    import wixUsers from 'wix-users';\n *    ```\n *\n * The APIs in `wix-users` can only be used in front-end code.\n *\n * @note\n *  The APIs in `wix-users` are only partially functional when previewing your site.\n *  View a published version of your site to see their complete functionality.\n *\n *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n *  you must use them in code that is contained in or is called from the\n *  [onReady()]($w.html#onReady) event handler or any element event handler.\n */\n\n/**\n * @class wix-users.User\n * @summary A site user.\n */\n\n/**\n * @member id\n * @label property\n * @syntax get id(): String\n * @summary Gets the user's ID.\n * @type {external:String}\n * @memberof wix-users.User\n * @description\n * The unique ID of the user.\n * @note\n *  The APIs in `wix-users` are only partially functional when previewing your site.\n *  View a published version of your site to see their complete functionality.\n *\n *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n *  you must use them in code that is contained in or is called from the\n *  [onReady()]($w.html#onReady) event handler or any element event handler.\n * @snippet [User-id.es6=Get the user's ID]\n * @snippet [Users-currentUser.es6=Get the current user's information]\n * @readonly\n */\n\n/**\n * @member loggedIn\n * @label property\n * @syntax get loggedIn(): Boolean\n * @summary Indicates whether the user is logged in or not.\n * @type {external:Boolean}\n * @memberof wix-users.User\n * @description\n *  Gets one of the following:\n *  + `true` — The user is logged in.\n *  + `false` — The user is not logged in.\n *\n *\n * @note\n *  The APIs in `wix-users` are only partially functional when previewing your site.\n *  View a published version of your site to see their complete functionality.\n *\n *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n *  you must use them in code that is contained in or is called from the\n *  [onReady()]($w.html#onReady) event handler or any element event handler.\n * @snippet [User-loggedIn.es6=Get whether the user is logged in or not]\n * @snippet [Users-currentUser.es6=Get the current user's information]\n * @readonly\n */\n\n/**\n * @member role\n * @label property\n * @syntax get role(): String\n * @summary Gets the user's role.\n * @description\n *  Gets one of the following roles:\n *  + `\"Admin\"` — The owner of the site.\n *  + `\"Member\"` — A user who is logged in.\n *  + `\"Visitor\"` — A user who is not logged in.\n *\n *\n * @note\n *  The APIs in `wix-users` are only partially functional when previewing your site.\n *  View a published version of your site to see their complete functionality.\n *\n *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n *  you must use them in code that is contained in or is called from the\n *  [onReady()]($w.html#onReady) event handler or any element event handler.\n * @type {external:String}\n * @memberof wix-users.User\n * @snippet [User-role.es6=Get the user's role]\n * @snippet [Users-currentUser.es6=Get the current user's information]\n * @readonly\n */\n\n/**\n * @function getEmail\n * @summary Gets the email of the current user.\n * @syntax\n * function getEmail(): Promise&lt;String&gt;\n * @description\n * The `getEmail()` function returns a Promise that resolves to the email address\n * of the user that is logged in or rejects if the current user is not logged in.\n * @note\n *  The APIs in `wix-users` are only partially functional when previewing your site.\n *  View a published version of your site to see their complete functionality.\n *\n *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n *  you must use them in code that is contained in or is called from the\n *  [onReady()]($w.html#onReady) event handler or any element event handler.\n * @returns {Promise}\n * @fulfill {external:String} The email address of the user that is logged in.\n * @reject {external:String} Message containing error that the current user is not logged in.\n * @snippet [User-getEmail.es6=Get the user's email address]\n * @snippet [Users-currentUser.es6=Get the current user's information]\n * @memberof wix-users.User\n * @instance\n */\n\nextendCompSchema('Users', {\n  mode: {\n    schemaType: ['string'],\n    enum: ['login', 'signup'],\n    validations: {\n      type: true\n    }},\n  lang: {\n    schemaType: ['string'],\n    maxLength: 2,\n    minLength: 2,\n    validations: {\n      type: true,\n      length: true\n    }},\n  onLogin: {\n    schemaType: ['function'],\n    validations: {\n      type: true\n    }\n  },\n  language: {\n    schemaType: ['string'],\n    maxLength: 2,\n    minLength: 2,\n    validations: {\n      type: true,\n      length: true\n    }\n  }\n});\n\nclass Users {\n  constructor(appDefId) {\n    this.appDefId = appDefId;\n  }\n\n  /**\n   * @member currentUser\n   * @label property\n   * @syntax\n   * get currentUser(): User\n   * @summary Gets the current user viewing the site.\n   * @description\n   *  Gets a [`User`](wix-users.User.html) object containing information about\n   *  the user currently viewing the site.\n   * @note\n   *  The APIs in `wix-users` are only partially functional when previewing your site.\n   *  View a published version of your site to see their complete functionality.\n   *\n   *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n   *  you must use them in code that is contained in or is called from the\n   *  [onReady()]($w.html#onReady) event handler or any element event handler.\n   * @snippet [Users-currentUser.es6=Get the current user's information]\n   * @type {wix-users.User}\n   * @memberof wix-users\n   * @readonly\n   */\n  get currentUser() {\n    const RGI = platformUtils.getRGI();\n    const siteMemberData = RGI.getSiteMemberData(this.appDefId);\n    return new User(siteMemberData);\n  }\n\n  /**\n   * @typedef {external:Object} wix-users~LoginOptions\n   * @summary An object used by the `promptLogin()` function to determine how the login dialog box appears.\n   * @property {external:String} [mode] What type of login experience to present: `\"login\"` or `\"signup\"`. Defaults to the option chosen in the Member Signup Settings panel in the Editor.\n   * @property {external:String} [lang] The two letter language code of the language to show the login form in. Defaults to `\"en\"` if the property doesn't exist or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.\n   * @snippet [Users-promptLogin_options.es6=Prompt the current user to login]\n   * @see [promptLogin( )](#promptLogin)\n   */\n\n\n  /**\n   * @function promptLogin\n   * @syntax\n   * function promptLogin([options: LoginOptions]): Promise&lt;User&gt;\n   * @summary Prompts the current site visitor to log in as a site member.\n   * @description\n   *  The `promptLogin()` function returns a Promise that resolves to the newly\n   *  logged in user when the login has completed.\n   *\n   *  The `promptLogin()` function cannot be called before the page is ready.\n   * @note\n   *  The APIs in `wix-users` are only partially functional when previewing your site.\n   *  View a published version of your site to see their complete functionality.\n   *\n   *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n   *  you must use them in code that is contained in or is called from the\n   *  [onReady()]($w.html#onReady) event handler or any element event handler.\n   * @param {wix-users~LoginOptions} options The options that determine how the login dialog box appears.\n   * @returns {Promise}\n   * @fulfill {wix-users.User} Information about the newly logged in user.\n   * @reject {external:String} Message that the dialog was canceled, or any other reason the user failed to log in.\n   * @snippet [Users-promptLogin.es6=Prompt the current user to login]\n   * @snippet [Users-promptLogin_options.es6=Prompt the current user to login with given options]\n   * @see [promptForgotPassword( )](#promptForgotPassword)\n   * @memberof wix-users\n   */\n  promptLogin(options) {\n    return new Promise((resolve, reject) => {\n      const requestParams = {callOnCancel: true};\n      const language = _.get(options, 'lang');\n      const mode = _.get(options, 'mode');\n\n      if (!validation.validate('Users', 'promptLogin', options)) {\n        reject();\n        return;\n      }\n\n      if (mode) {\n        requestParams.mode = mode;\n      }\n\n      if (language) {\n        requestParams.language = language;\n      }\n\n      postMessage.sendMessage(postMessage.Intent.WIX_CODE_SITE_API,\n        postMessage.MessageTypes.SM_REQUEST_LOGIN,\n        requestParams,\n        (data, error) => {\n          if (error) {\n            reject(error);\n          } else if (data && data.wasCancelled) {\n            reject(UserErrors.CLOSE_DIALOG);\n          } else if (!data || !_.isObject(data.data)) {\n            reject(UserErrors.NO_LOGGED_IN);\n          } else if (data.data.status === LoginStatus.APPLICANT) {\n            reject(UserErrors.AWAITING_APPROVAL);\n          } else {\n            resolve(new User({\n              uid: data.data.id,\n              permissions: data.data.owner\n            }));\n          }\n        });\n    });\n  }\n\n\n  /**\n   * @function logout\n   * @syntax\n   * function logout(): void\n   * @summary Logs the current user out of the site.\n   * @description\n   *  The `logout()` function logs the current user out of the site.\n   * @note\n   *  The APIs in `wix-users` are only partially functional when previewing your site.\n   *  View a published version of your site to see their complete functionality.\n   *\n   *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n   *  you must use them in code that is contained in or is called from the\n   *  [onReady()]($w.html#onReady) event handler or any element event handler.\n   * @snippet [Users-logout.es6=Log out the current user]\n   * @memberof wix-users\n   */\n  logout() {\n    return new Promise((resolve, reject) => {\n      postMessage.sendMessage(postMessage.Intent.WIX_CODE_SITE_API, postMessage.MessageTypes.SM_LOGOUT, null, (data, error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * @function promptForgotPassword\n   * @syntax\n   * function promptForgotPassword([language: String]): Promise&lt;void&gt;\n   * @summary Prompts the current site visitor with a password reset.\n   * @description\n   *  The `promptForgotPassword()` function returns a Promise that resolves when\n   *  the user has sumbitted the forgot password form.\n   *\n   *  The `promptForgotPassword()` function cannot be called before the page is ready.\n   * @note\n   *  The APIs in `wix-users` are only partially functional when previewing your site.\n   *  View a published version of your site to see their complete functionality.\n   *\n   *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n   *  you must use them in code that is contained in or is called from the\n   *  [onReady()]($w.html#onReady) event handler or any element event handler.\n   * @param {external:String} [language] The language of the reset password form. Defaults to `\"English\"` if not passed or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.\n   * @returns {Promise}\n   * @fulfill {void}\n   * @reject {external:String} Message that the dialog was canceled, user is already logged in, or any other reason the password reset failed.\n   * @snippet [Users-promptForgotPassword.es6=Prompt the user with a password reset]\n   * @snippet [Users-promptForgotPassword_options.es6=Prompt the current user to login with given language]\n   * @see [promptLogin( )](#promptLogin)\n   * @memberof wix-users\n   */\n\n  promptForgotPassword(language) {\n    return new Promise((resolve, reject) => {\n      const requestParams = _.isUndefined(language) ? {} : {language};\n\n      if (!validation.validate('Users', 'promptForgotPassword', requestParams)) {\n        reject();\n        return;\n      }\n\n      postMessage.sendMessage(postMessage.Intent.WIX_CODE_SITE_API, postMessage.MessageTypes.SM_FORGOT_PASSWORD, requestParams, (data, error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * @callback $w.LoginHandler\n   * @summary Function that runs when a user has logged in.\n   * @param {wix-users.User} user The user that has logged in.\n   */\n\n  /**\n   * @function onLogin\n   * @syntax\n   * function onLogin(handler: LoginHandler): void\n   * callback LoginHandler(): void\n   * @summary Sets the function that runs when a user logs in.\n   * @description\n   *  Use the `onLogin()` function for code you want to run after a user successfully\n   *  logs into your site.\n   *\n   *  Usually, you want to call the `onLogin()` function in the **Site** tab of the\n   *  code panel so that the `onLogin()` event handler will be run no matter which\n   *  page on your site a user uses to log in.\n   * @note\n   *  The APIs in `wix-users` are only partially functional when previewing your site.\n   *  View a published version of your site to see their complete functionality.\n   *\n   *  The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n   *  you must use them in code that is contained in or is called from the\n   *  [onReady()]($w.html#onReady) event handler or any element event handler.\n   * @param {$w.LoginHandler} handler The name of the function or the function expression to run when a user has logged in.\n   * @snippet [Users-onLogin.es6=Run code when a user logs in]\n   * @memberof wix-users\n   *  @eventhandler\n   *  @eventtype\n   */\n  onLogin(callback) {\n    if (!validation.validate('Users', 'onLogin', {onLogin: callback})) {\n      return;\n    }\n    const RGI = platformUtils.getRGI();\n    RGI.addOnUserLoginCallback(() => {\n      callback(this.currentUser);\n    });\n  }\n\n  naamaTest() {\n    console.log(111111111111);\n  }\n}\n\nexport default Users;\n\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/Users/users.js","import {core} from 'wixcode-sdk';\n\nconst { module } = { ...core };\nmodule.register('wix-fo', class A {}, 'foo');\n\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/Foo/index.js","import Users from './users';\nimport {core} from 'wixcode-sdk';\n\nconst { module } = { ...core };\n\nmodule.register('wix-users', Users, 'user');\n\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/Users/index.js","import {UserErrors, UserRoles} from './consts';\nimport _ from 'lodash';\nimport {core} from 'wixcode-sdk';\n\nexport default class User {\n  constructor(memberData) {\n    if (memberData.uid) {\n      this.id = memberData.uid;\n      this.loggedIn = true;\n      this.role = memberData.permissions ? UserRoles.ADMIN : UserRoles.MEMBER;\n    } else {\n      const { platformUtils } = { ...core };\n      const RGI = platformUtils.getRGI();\n      this.id = _.get(RGI.getSessionInfo(), 'svSession');\n      this.loggedIn = false;\n      this.role = UserRoles.VISITOR;\n    }\n    if (memberData.instance) {\n      this.instance = memberData.instance;\n    }\n    if (memberData.instanceId) {\n      this.instanceId = memberData.instanceId;\n    }\n    this.getEmail = this.getEmail.bind(this);\n  }\n\n  getEmail() {\n    return new Promise((resolve, reject) => {\n      if (!this.loggedIn) {\n        reject(UserErrors.NO_LOGGED_IN);\n        return;\n      }\n      const { postMessage } = {...core};\n\n      postMessage.sendMessage(postMessage.Intent.WIX_CODE_SITE_API, postMessage.MessageTypes.SM_CURRENT_USER_EMAIL, null, (email, error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(email);\n        }\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/Users/user.js","import Foo from './Foo';\nimport Users from './Users';\n\nexport {\n  Users,\n  Foo\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/namespaces/index.js"],"sourceRoot":""}